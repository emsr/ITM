#
#  COPYRIGHT:
#  Copyright 2006 - 2015
#  Alion Science and Technology
#  US Govt retains rights in accordance
#  with DoD FAR Supp 252.227 - 7013.
#


OUT_BASE = itm
ABI = 64


OUT_DIR = $(OUT_BASE)$(ABI)
LIB_DIR = $(OUT_DIR)
BIN_DIR = $(OUT_DIR)
INC_DIR = .
SRC_DIR = .
OBJ_DIR = $(OUT_DIR)/obj
INST_DIR = .
INST_INC_DIR = $(INST_DIR)/include
ifeq ($(ABI),64)
  INST_LIB_DIR = $(INST_DIR)/lib64
else
  INST_LIB_DIR = $(INST_DIR)/lib
endif
INST_BIN_DIR = $(INST_DIR)/bin
CD_DIR = CD
PROD_DIR = $(CD_DIR)/$(OUT_BASE)-$(VERSION_TIREM)
OS_DIR = $(PROD_DIR)/mingw64
ABI_DIR = $(OS_DIR)/$(ABI)
DOCS_DIR = $(PROD_DIR)/docs
HTML_DIR = $(DOCS_DIR)/html
TARBALL_DIR = $(OUT_BASE)

COPY = cp -f
SED = sed
CXX_DIR = /usr
CXX_BIN_DIR = $(CXX_DIR)/bin
CXX_OPTS = -fdiagnostics-color=always
CXX = $(CXX_BIN_DIR)/g++ -std=gnu++14 $(CXX_OPTS)
ifeq ($(ABI),64)
  CXX_LIB_DIR = /usr/x86_64-w64-mingw32/sys-root/mingw/bin
  CXX = $(CXX_BIN_DIR)/x86_64-w64-mingw32-g++ -std=gnu++14 $(CXX_OPTS)
  AR = $(CXX_BIN_DIR)/x86_64-w64-mingw32-ar
  RANLIB = $(CXX_BIN_DIR)/x86_64-w64-mingw32-ranlib
else
  CXX_LIB_DIR = /usr/i686-w64-mingw32/sys-root/mingw/bin
  CXX = $(CXX_BIN_DIR)/i686-w64-mingw32-g++ -std=gnu++14 $(CXX_OPTS)
  AR = $(CXX_BIN_DIR)/i686-w64-mingw32-ar
  RANLIB = $(CXX_BIN_DIR)/i686-w64-mingw32-ranlib
endif
OPT = -O3
#OPT = -g
CXXFLAGS = -Wall -Wextra -Wno-deprecated-declarations $(OPT) -m$(ABI) -c
OFLAGS = -Wall -Wextra $(OPT) -m$(ABI) -static-libgcc -static-libstdc++
LIB_DL = 
#  These flags control library symbol visibility.
VIS_DEFAULT = -fvisibility=default
VIS_HIDDEN = -fvisibility=hidden
EXE_EXT = .exe
DLL_EXT = .dll
LIB_EXT = .lib
OBJ_EXT = .o
DLL_PRE = 

INCS = \
  $(INC_DIR)/ITM.h

SRCS = \
  $(SRC_DIR)/ITM.cpp \
  $(SRC_DIR)/ITMDLL.cpp

BIN_SRCS = \
  $(SRC_DIR)/RunITM.cpp \
  $(SRC_DIR)/RunITMDLL.cpp

BINS = \
  $(BIN_DIR)/RunITM$(EXE_EXT) \
  $(BIN_DIR)/RunITMDLL$(EXE_EXT)


all: $(OBJ_DIR) \
     orig \
     new


# new...

new: $(OBJ_DIR) $(BIN_DIR)/RunITM$(EXE_EXT) $(LIB_DIR)/libITM$(DLL_EXT)

$(OBJ_DIR)/ITM$(OBJ_EXT): ITM.h $(SRC_DIR)/ITM.cpp
	$(CXX) -c -o $(OBJ_DIR)/ITM$(OBJ_EXT) ITM.cpp

$(LIB_DIR)/libITM$(DLL_EXT): $(OBJ_DIR)/ITM$(OBJ_EXT)
	$(CXX) -shared -o $(LIB_DIR)/libITM$(DLL_EXT) $(OBJ_DIR)/ITM$(OBJ_EXT)

$(OBJ_DIR)/RunITM$(OBJ_EXT): $(SRC_DIR)/RunITM.cpp
	$(CXX) -c -o $(OBJ_DIR)/RunITM$(OBJ_EXT) RunITM.cpp

$(BIN_DIR)/RunITM$(EXE_EXT): $(OBJ_DIR)/RunITM$(OBJ_EXT) $(LIB_DIR)/libITM$(DLL_EXT)
	$(CXX) -o $(BIN_DIR)/RunITM$(EXE_EXT) $(OBJ_DIR)/RunITM$(OBJ_EXT) -L$(LIB_DIR) -lITM


# original...

orig: $(OBJ_DIR) $(BIN_DIR)/RunITMDLL$(EXE_EXT) $(LIB_DIR)/libITMDLL$(DLL_EXT)

$(OBJ_DIR)/ITMDLL$(OBJ_EXT): $(SRC_DIR)/ITMDLL.cpp
	$(CXX) -c -o $(OBJ_DIR)/ITMDLL$(OBJ_EXT) $(SRC_DIR)/ITMDLL.cpp

$(LIB_DIR)/libITMDLL$(DLL_EXT): $(OBJ_DIR)/ITMDLL$(OBJ_EXT)
	$(CXX) -shared -o $(LIB_DIR)/libITMDLL$(DLL_EXT) $(OBJ_DIR)/ITMDLL$(OBJ_EXT)

$(OBJ_DIR)/RunITMDLL$(OBJ_EXT): $(SRC_DIR)/RunITMDLL.cpp
	$(CXX) -c -o $(OBJ_DIR)/RunITMDLL$(OBJ_EXT) $(SRC_DIR)/RunITMDLL.cpp

$(BIN_DIR)/RunITMDLL$(EXE_EXT): $(OBJ_DIR)/RunITMDLL$(OBJ_EXT) $(LIB_DIR)/libITMDLL$(DLL_EXT)
	$(CXX) -o $(BIN_DIR)/RunITMDLL$(EXE_EXT) $(OBJ_DIR)/RunITMDLL$(OBJ_EXT) -L$(LIB_DIR) -lITMDLL


check:
	LD_LIBRARY_PATH=$(LIB_DIR):$(CXX_LIB_DIR):$$LD_LIBRARY_PATH $(BIN_DIR)/RunITMDLL$(EXE_EXT) < itm_1.in > $(BIN_DIR)/itm_1.out
	LD_LIBRARY_PATH=$(LIB_DIR):$(CXX_LIB_DIR):$$LD_LIBRARY_PATH $(BIN_DIR)/RunITM$(EXE_EXT) < itm_1.in > $(BIN_DIR)/itm_1.out
	dos2unix $(BIN_DIR)/*.out


clean:
	rm -rf $(OUT_DIR)/obj
	rm -f $(OUT_DIR)/*


tarball:
	rm -rf $(TARBALL_DIR)
	mkdir $(TARBALL_DIR)
	$(COPY) TODO README .gitignore Doxyfile Makefile* $(INCS) $(SRCS) $(BIN_SRCS) *.dat *.in $(TARBALL_DIR)
	tar -cvf $(TARBALL_DIR).tar $(TARBALL_DIR)
	bzip2 -f $(TARBALL_DIR).tar
	rm -rf $(TARBALL_DIR)


$(OUT_DIR):
	if test ! -d $(OUT_DIR); then \
	  mkdir $(OUT_DIR); \
	fi

$(OBJ_DIR): $(OUT_DIR)
	if test ! -d $(OBJ_DIR); then \
	  mkdir $(OBJ_DIR); \
	fi

$(INST_INC_DIR):
	if test ! -d $(INST_INC_DIR); then \
	  mkdir $(INST_INC_DIR); \
	fi

$(INST_LIB_DIR):
	if test ! -d $(INST_LIB_DIR); then \
	  mkdir $(INST_LIB_DIR); \
	fi

$(INST_BIN_DIR):
	if test ! -d $(INST_BIN_DIR); then \
	  mkdir $(INST_BIN_DIR); \
	fi

$(CD_DIR):
	if test ! -d $(CD_DIR); then \
	  mkdir $(CD_DIR); \
	fi

$(PROD_DIR): $(CD_DIR)
	if test ! -d $(PROD_DIR); then \
	  mkdir $(PROD_DIR); \
	fi

$(OS_DIR): $(PROD_DIR)
	if test ! -d $(OS_DIR); then \
	  mkdir $(OS_DIR); \
	fi

$(ABI_DIR): $(OS_DIR)
	if test ! -d $(ABI_DIR); then \
	  mkdir $(ABI_DIR); \
	fi

$(DOCS_DIR): $(PROD_DIR)
	if test ! -d $(DOCS_DIR); then \
	  mkdir $(DOCS_DIR); \
	fi

$(HTML_DIR): $(DOCS_DIR)
	if test ! -d $(HTML_DIR); then \
	  mkdir $(HTML_DIR); \
	fi
